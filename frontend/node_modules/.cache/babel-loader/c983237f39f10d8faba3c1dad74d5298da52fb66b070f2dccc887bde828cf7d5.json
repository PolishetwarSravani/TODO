{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polis\\\\OneDrive\\\\Desktop\\\\SDE-Intern\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const fetchTodos = async () => {\n    const response = await fetch('http://localhost:5000/api/todos');\n    const data = await response.json();\n    setTodos(data);\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const addTodo = async () => {\n    if (!newTodo.trim()) return;\n    const response = await fetch('http://localhost:5000/api/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: newTodo\n      })\n    });\n    const data = await response.json();\n    setTodos([data, ...todos]);\n    setNewTodo('');\n  };\n  const toggleComplete = async id => {\n    const todo = todos.find(t => t._id === id);\n    if (!todo) return;\n    const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    });\n    const data = await response.json();\n    setTodos(todos.map(t => t._id === id ? data : t));\n  };\n  const deleteTodo = async id => {\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\n      method: 'DELETE'\n    });\n    setTodos(todos.filter(t => t._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '600px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Add a new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleComplete: toggleComplete,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5IWrR3qlB9fd4Xrb4YgyFMm9peE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","fetchTodos","response","fetch","data","json","addTodo","trim","method","headers","body","JSON","stringify","text","toggleComplete","id","todo","find","t","_id","completed","map","deleteTodo","filter","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/polis/OneDrive/Desktop/SDE-Intern/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TodoList from './components/TodoList';\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  const fetchTodos = async () => {\r\n    const response = await fetch('http://localhost:5000/api/todos');\r\n    const data = await response.json();\r\n    setTodos(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const addTodo = async () => {\r\n    if (!newTodo.trim()) return;\r\n    const response = await fetch('http://localhost:5000/api/todos', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ text: newTodo }),\r\n    });\r\n    const data = await response.json();\r\n    setTodos([data, ...todos]);\r\n    setNewTodo('');\r\n  };\r\n\r\n  const toggleComplete = async (id) => {\r\n    const todo = todos.find((t) => t._id === id);\r\n    if (!todo) return;\r\n    const response = await fetch(`http://localhost:5000/api/todos/${id}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ completed: !todo.completed }),\r\n    });\r\n    const data = await response.json();\r\n    setTodos(todos.map((t) => (t._id === id ? data : t)));\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    await fetch(`http://localhost:5000/api/todos/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    setTodos(todos.filter((t) => t._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: '600px', margin: '0 auto' }}>\r\n      <h1>Todo App</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Add a new todo\"\r\n      />\r\n      <button onClick={addTodo}>Add</button>\r\n      <TodoList todos={todos} toggleComplete={toggleComplete} deleteTodo={deleteTodo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}